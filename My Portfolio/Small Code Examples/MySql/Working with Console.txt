\sql

\connect root@localhost

CREATE DATABASE IF NOT EXISTS OldMutual;

USE OldMutual;

CREATE TABLE IF NOT EXISTS employees
	(
	emp_no          INT(10)         NOT NULL,
	birth_date      DATE            NOT NULL,
	first_name      VARCHAR(14)     NOT NULL,
	last_name       VARCHAR(16)     NOT NULL,
	gender          ENUM('M','F')   NOT NULL,
	hire_date       DATE            NOT NULL,
	PRIMARY KEY (emp_no)
	);
	
CREATE TABLE IF NOT EXISTS departments
	(
	dept_no         CHAR(4)         NOT NULL,
	dept_name       VARCHAR(40)     NOT NULL,
	PRIMARY KEY (dept_no)
	);
	
CREATE TABLE IF NOT EXISTS dept_emp 
	(
	emp_no          INT(10)         NOT NULL,
	dept_no         CHAR(4)         NOT NULL,
	from_date       DATE            NOT NULL,
	to_date         DATE            NOT NULL,
	PRIMARY KEY (emp_no, dept_no),
	
	CONSTRAINT fk_EMP_in_DEPT_EMP
	FOREIGN KEY (emp_no)
	REFERENCES employees(emp_no),
	
	CONSTRAINT fk_DEPT_in_DEPT_EMP
	FOREIGN KEY (dept_no)
	REFERENCES departments(dept_no)
	);
	
CREATE TABLE IF NOT EXISTS dept_manager
	(
	dept_no         CHAR(4)         NOT NULL,
	emp_no          INT(10)         NOT NULL,
	from_date       DATE            NOT NULL,
	to_date         DATE            NOT NULL,
	PRIMARY KEY (dept_no, emp_no),
	
	CONSTRAINT fk_DEPT_in_DEPT_MANAGER
	FOREIGN KEY (dept_no)
	REFERENCES departments(dept_no),
	
	CONSTRAINT fk_EMP_in_DEPT_MANAGER
	FOREIGN KEY (emp_no)
	REFERENCES employees(emp_no)
	);
	
CREATE TABLE IF NOT EXISTS salaries
	(
	emp_no          INT(10)         NOT NULL,
	salary          INT(11)         NOT NULL,
	from_date       DATE            NOT NULL,
	to_date         DATE            NOT NULL,
	PRIMARY KEY (emp_no, from_date),
	
	CONSTRAINT fk_EMP_in_SALARIES
	FOREIGN KEY (emp_no)
	REFERENCES employees(emp_no)
	);
	
CREATE TABLE IF NOT EXISTS titles
	(
	emp_no          INT(10)         NOT NULL,
	title           VARCHAR(50)     NOT NULL,
	from_date       DATE            NOT NULL,
	to_date         DATE            NOT NULL,
	PRIMARY KEY (emp_no, title, from_date),
	
	CONSTRAINT fk_EMP_in_TITLES
	FOREIGN KEY (emp_no)
	REFERENCES employees(emp_no)
	);
	
 
	
INSERT INTO employees VALUES (112345,'1989-09-24','Thato','Hendrick','M','2016-05-24');
INSERT INTO employees VALUES (273044,'1989-05-04','Peter','Ross','M','2017-08-11');
INSERT INTO employees VALUES (222093,'1989-07-02','Kyle','Klassen','M','2012-12-16');
INSERT INTO employees VALUES (901162,'1989-03-06','Lerato','Modise','F','2019-07-02');
INSERT INTO employees VALUES (222242,'1989-02-08','Bongani','Dlamini','M','2014-05-29');

INSERT INTO salaries VALUES (112345,8368,'1989-10-26','2016-05-24');
INSERT INTO salaries VALUES (273044,3090,'1989-06-26','2017-08-11');
INSERT INTO salaries VALUES (901162,19892,'1989-04-26','2016-12-02');
INSERT INTO salaries VALUES (222093,3788,'1989-08-26','2012-12-16');

INSERT INTO titles VALUES (112345,'Late Shift Teller','1989-10-26','2016-05-24');
INSERT INTO titles VALUES (273044,'Back end Cleaner','1989-06-26','2017-08-11');
INSERT INTO titles VALUES (222093,'Senior Security Officer','1989-08-26','2012-12-16');
INSERT INTO titles VALUES (901162,'HR Manager','1989-04-26','2016-12-02');


INSERT INTO departments VALUES ('A02','Teller Department');
INSERT INTO departments VALUES ('A23','Cleaning Staff');
INSERT INTO departments VALUES ('B09','Security Department');
INSERT INTO departments VALUES ('D14','Human Resources');

INSERT INTO dept_manager VALUES ('A02',222242,'1989-12-12','2014-05-29');
INSERT INTO dept_manager VALUES ('A23',273044,'1999-05-04','2012-12-16');
INSERT INTO dept_manager VALUES ('B09',222093,'1989-08-02','2016-12-02');
INSERT INTO dept_manager VALUES ('D14',222242,'1989-12-12','2010-05-29');

INSERT INTO dept_emp VALUES (112345,'A23','1989-09-24','2016-05-24');
INSERT INTO dept_emp VALUES (901162,'A23','1989-03-06','2016-12-02');
INSERT INTO dept_emp VALUES (273044,'D14','1989-05-04','2017-08-11');
INSERT INTO dept_emp VALUES (222242,'B09','1989-02-08','2014-05-29');



delimiter //
CREATE PROCEDURE proc_employeesGetFemales()
BEGIN

	SELECT employees.*
	FROM employees
	WHERE employees.gender = 'F';

END//
delimiter ;

CALL proc_employeesGetFemales();

delimiter //
CREATE PROCEDURE proc_employeesGetMales()
BEGIN

	SELECT employees.*
	FROM employees
	WHERE employees.gender = 'M';
    
END//
delimiter ;

CALL proc_employeesGetMales();

delimiter //
CREATE PROCEDURE proc_employeeYoungest()
BEGIN
    
    SELECT employees.*
	FROM employees
    WHERE DATEDIFF(CURRENT_DATE, employees.birth_date) = ( SELECT MIN(DATEDIFF(CURRENT_DATE, employees.birth_date)) FROM employees );
    
END//
delimiter ;

CALL proc_employeeYoungest();

delimiter //
CREATE PROCEDURE proc_employeeOldest()
BEGIN
        
    SELECT employees.*
	FROM employees
    WHERE DATEDIFF(CURRENT_DATE, employees.birth_date) = ( SELECT MAX(DATEDIFF(CURRENT_DATE, employees.birth_date)) FROM employees );
   
END//
delimiter ;

CALL proc_employeeOldest();

ALTER TABLE employees
ADD COLUMN city_of_birth VARCHAR(30) NOT NULL;



delimiter //
CREATE PROCEDURE proc_februaryBorn()
BEGIN

	SELECT * FROM employees WHERE month(employees.birth_date) = 2;

END//
delimiter ;

CALL proc_februaryBorn();

delimiter //
CREATE PROCEDURE proc_fiveMonths()
BEGIN

	SELECT * FROM employees WHERE current_date() > DATE_ADD(employees.hire_date, INTERVAL 5 MONTH);

END//
delimiter ;

CALL proc_fiveMonths();

delimiter //
CREATE PROCEDURE proc_dropDepartmentTable()
BEGIN
	
    SET FOREIGN_KEY_CHECKS = 0;
	DROP TABLE departments;
	SET FOREIGN_KEY_CHECKS = 1;

END//
delimiter ;

CALL proc_dropDepartmentTable();

delimiter //
CREATE PROCEDURE proc_highestSalary()
BEGIN
	
    SELECT titles.title 
    FROM titles 
    WHERE titles.emp_no = ( SELECT salaries.emp_no FROM salaries WHERE salaries.salary = (SELECT MAX(salaries.salary) FROM salaries) );

END//
delimiter ;

CALL proc_highestSalary();


































